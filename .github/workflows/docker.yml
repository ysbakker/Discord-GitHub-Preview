name: build

on:
  release:
    types: [published]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: |
          if [[ ${{ github.ref }} == *"tags"* ]]; then
            echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
          else
            echo ::set-output name=VERSION::0.0.1-alpha
          fi
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          url: ${{ secrets.REGISTRY_URL }}
          version: ${{ steps.get_version.outputs.VERSION }}
          image: ysbakker/discord-github-preview
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.url }}/${{ env.image }}:latest
            ${{ env.url }}/${{ env.image }}:${{ env.version }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Pull new version on host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            printf 'Attempting to update ${{ secrets.PROJDIR }}...\n'
            cd ${{ secrets.PROJDIR }}
            docker-compose pull && docker-compose up -d
            docker system prune -f
            printf '\n\tâœ” Done!\n\n'
